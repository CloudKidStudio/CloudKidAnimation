{
    "project": {
        "name": "CloudKid Animation API",
        "description": "CloudKid Animation API: A library for playing Animations",
        "version": "2.3.1",
        "logo": ""
    },
    "files": {
        "src/Animator.js": {
            "name": "src/Animator.js",
            "modules": {
                "cloudkid": 1
            },
            "classes": {
                "Animator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/AnimatorTimeline.js": {
            "name": "src/AnimatorTimeline.js",
            "modules": {},
            "classes": {
                "AnimatorTimeline": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/BitmapMovieClip.js": {
            "name": "src/BitmapMovieClip.js",
            "modules": {},
            "classes": {
                "BitmapMovieClip": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CharacterClip.js": {
            "name": "src/CharacterClip.js",
            "modules": {},
            "classes": {
                "CharacterClip": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/CharacterController.js": {
            "name": "src/CharacterController.js",
            "modules": {},
            "classes": {
                "CharacterController": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/PixiAnimator.js": {
            "name": "src/PixiAnimator.js",
            "modules": {},
            "classes": {
                "PixiAnimator": 1,
                "PixiAnimator.AnimTimeline": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/TextureAtlas.js": {
            "name": "src/TextureAtlas.js",
            "modules": {},
            "classes": {
                "TextureAtlas": 1,
                "Texture": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "cloudkid": {
            "name": "cloudkid",
            "submodules": {},
            "classes": {
                "Animator": 1,
                "AnimatorTimeline": 1,
                "BitmapMovieClip": 1,
                "CharacterClip": 1,
                "CharacterController": 1,
                "PixiAnimator": 1,
                "PixiAnimator.AnimTimeline": 1,
                "TextureAtlas": 1,
                "Texture": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/TextureAtlas.js",
            "line": 144
        }
    },
    "classes": {
        "Animator": {
            "name": "Animator",
            "shortname": "Animator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cloudkid",
            "namespace": "",
            "file": "src/Animator.js",
            "line": 13,
            "description": "Animator is a static class designed to provided\nbase animation functionality, using frame labels of MovieClips",
            "static": 1
        },
        "AnimatorTimeline": {
            "name": "AnimatorTimeline",
            "shortname": "AnimatorTimeline",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cloudkid",
            "namespace": "",
            "file": "src/AnimatorTimeline.js",
            "line": 8,
            "description": "Animator Timeline is a class designed to provide\nbase animation functionality",
            "is_constructor": 1
        },
        "BitmapMovieClip": {
            "name": "BitmapMovieClip",
            "shortname": "BitmapMovieClip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cloudkid",
            "namespace": "",
            "file": "src/BitmapMovieClip.js",
            "line": 3,
            "description": "A class similar to createjs.MovieClip, but made to play animations from a cloudkid.TextureAtlas.\nThe CreateJS Sprite class requires a spritesheet with equal sized and spaced frames. By using cloudkid.TextureAtlas,\nyou can use a much smaller spritesheet, sprites on screen with fewer extra transparent pixels, and use the same\nAPI as MovieClip.\n\nSee \"Export BitmapMovieClip.jsfl\" in the library for a script that will export a selected MovieClip in the library\nwith all of the information (except data.scale) needed to reassemble the BitmapMovieClip.",
            "extends": "createjs.Container",
            "is_constructor": 1,
            "params": [
                {
                    "name": "atlas=null",
                    "description": "The texture atlas to pull frames from.",
                    "type": "TextureAtlas"
                },
                {
                    "name": "data=null",
                    "description": "Initialization data",
                    "type": "Object"
                },
                {
                    "name": "data.fps",
                    "description": "Framerate to play the movieclip at. Omitting this will use the current framerate.",
                    "type": "Int",
                    "optional": true
                },
                {
                    "name": "data.labels",
                    "description": "A dictionary of the labels in the movieclip to assist in playing animations.",
                    "type": "Object",
                    "optional": true
                },
                {
                    "name": "data.origin",
                    "description": "The origin of the movieclip.",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{x:0,y:0}"
                },
                {
                    "name": "data.frames",
                    "description": "An array of frame sequences to pull from the texture atlas.",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "data.frames.name",
                    "description": "The name to use for the frame sequence. This should include a \"#\" to be replaced with the image number.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "data.frames.min",
                    "description": "The first frame number in the frame sequence.",
                    "type": "Int",
                    "optional": true
                },
                {
                    "name": "data.frames.max",
                    "description": "The last frame number in the frame sequence.",
                    "type": "Int",
                    "optional": true
                },
                {
                    "name": "data.frames.digits",
                    "description": "The maximum number of digits in the names of the frames, e.g. myAnim0001 has 4 digits.",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "4"
                },
                {
                    "name": "data.scale",
                    "description": "The scale at which the art was exported, e.g. a scale of 1.4 means the art was increased\n        in size to 140% before exporting and should be scaled back down before drawing to the screen.\n\nFormat for data:\n\t{\n\t\tfps:30,\n\t\tlabels:\n\t\t{\n\t\t\tanimStart:0,\n\t\t\tanimStart_loop:15\n\t\t},\n\t\torigin:{ x: 20, y:30 },\n\t\tframes:\n\t\t[\n\t\t\t{\n\t\t\t\tname:\"myAnim#\",\n\t\t\t\tmin:1,\n\t\t\t\tmax:20,\n\t\t\t\tdigits:4\n\t\t\t}\n\t\t],\n\t\tscale:1\n\t}\n\n The object describes a 30 fps animation that is 20 frames long, and was originally myAnim0001.png->myAnim0020.png,\n with frame labels on the first and 16th frame. 'digits' is optional, and defaults to 4.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1"
                }
            ]
        },
        "CharacterClip": {
            "name": "CharacterClip",
            "shortname": "CharacterClip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cloudkid",
            "namespace": "",
            "file": "src/CharacterClip.js",
            "line": 8,
            "description": "CharacterClip is used by the CharacterController class",
            "is_constructor": 1,
            "params": [
                {
                    "name": "event",
                    "description": "Animator event to play",
                    "type": "String"
                },
                {
                    "name": "loops",
                    "description": "The number of loops",
                    "type": "Int"
                }
            ]
        },
        "CharacterController": {
            "name": "CharacterController",
            "shortname": "CharacterController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cloudkid",
            "namespace": "",
            "file": "src/CharacterController.js",
            "line": 11,
            "description": "Character Controller class is designed to play animated\nsequences on the timeline. This is a flexible way to\nanimate characters on a timeline"
        },
        "PixiAnimator": {
            "name": "PixiAnimator",
            "shortname": "PixiAnimator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cloudkid",
            "namespace": "",
            "file": "src/PixiAnimator.js",
            "line": 8,
            "description": "[PIXI Only] Animator for interacting with Spine animations"
        },
        "PixiAnimator.AnimTimeline": {
            "name": "PixiAnimator.AnimTimeline",
            "shortname": "PixiAnimator.AnimTimeline",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cloudkid",
            "namespace": "",
            "file": "src/PixiAnimator.js",
            "line": 501,
            "description": "[Pixi Only] Internal PixiAnimator class for keeping track of animations",
            "is_constructor": 1,
            "params": [
                {
                    "name": "clip",
                    "description": "The AnimTimeline's clip",
                    "type": "PIXI.MovieClip|Pixi.Spine"
                },
                {
                    "name": "callback",
                    "description": "The function to call when the clip is finished playing",
                    "type": "Function"
                },
                {
                    "name": "speed",
                    "description": "The speed at which the clip should be played",
                    "type": "Int"
                }
            ]
        },
        "TextureAtlas": {
            "name": "TextureAtlas",
            "shortname": "TextureAtlas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cloudkid",
            "namespace": "",
            "file": "src/TextureAtlas.js",
            "line": 3,
            "description": "Handles a spritesheet.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "image",
                    "description": "The image that all textures pull from.\n     This can also be an array of images, if the TextureAtlas should be built from several spritesheets.",
                    "type": "Image|HTMLCanvasElement|Array"
                },
                {
                    "name": "spritesheetData",
                    "description": "The JSON object describing the frames in the atlas.\n     This is expected to fit the JSON Hash format as exported from TexturePacker.\n     This can also be an array of data objects, if the TextureAtlas should be built from several spritesheets.",
                    "type": "Object|Array"
                }
            ]
        },
        "Texture": {
            "name": "Texture",
            "shortname": "Texture",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cloudkid",
            "namespace": "",
            "file": "src/TextureAtlas.js",
            "line": 144,
            "description": "A Texture - a specific portion of an image that can then be drawn by a Bitmap.\nThis class is hidden within TextureAtlas, and can't be manually created."
        }
    },
    "classitems": [
        {
            "file": "src/Animator.js",
            "line": 22,
            "description": "The current version of the Animator class",
            "itemtype": "property",
            "name": "VERSION",
            "type": "String",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 31,
            "description": "If we fire debug statements",
            "itemtype": "property",
            "name": "debug",
            "type": "Bool",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 40,
            "description": "The instance of cloudkid.Audio or cloudkid.Sound for playing audio along with animations.\nThis MUST be set in order to play synced animations.",
            "itemtype": "property",
            "name": "soundLib",
            "type": "cloudkid.Audio|cloudkid.Sound",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 50,
            "description": "The global captions object to use with animator",
            "itemtype": "property",
            "name": "captions",
            "type": "cloudkid.Captions",
            "access": "public",
            "tagname": "",
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 58,
            "description": "The collection of timelines",
            "itemtype": "property",
            "name": "_timelines",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 66,
            "description": "A collection of timelines for removal - kept out here so it doesn't need to be\nreallocated every frame",
            "itemtype": "property",
            "name": "_removedTimelines",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 75,
            "itemtype": "property",
            "name": "_timelinesMap",
            "type": "Dictionary",
            "access": "private",
            "tagname": "",
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 82,
            "description": "If the Animator is paused",
            "itemtype": "property",
            "name": "_paused",
            "type": "Bool",
            "access": "private",
            "tagname": "",
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 90,
            "description": "An empty object to avoid creating new objects in play()\nwhen an options object is not used for parameters.",
            "itemtype": "property",
            "name": "_optionsHelper",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 99,
            "description": "Sets the variables of the Animator to their defaults. Use when _timelines is null,\nif the Animator data was cleaned up but was needed again later.",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 114,
            "description": "Stops all animations and cleans up the variables used.",
            "itemtype": "method",
            "name": "destroy",
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 129,
            "description": "Play an animation for a frame label event",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "instance",
                    "description": "The timeline to animate",
                    "type": "AnimatorTimeline"
                },
                {
                    "name": "event",
                    "description": "The frame label event (e.g. \"onClose\" to \"onClose stop\")",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "The object of optional parameters or onComplete callback function",
                    "type": "Object|function",
                    "optional": true,
                    "props": [
                        {
                            "name": "onComplete",
                            "description": "The callback function when the animation is done",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "onCompleteParams",
                            "description": "Parameters to pass to onComplete function",
                            "type": "Array",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "startTime",
                            "description": "The time in milliseconds into the animation to start. A value of -1 makes the animation play at a random startTime.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "speed",
                            "description": "The speed at which to play the animation.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "soundData",
                            "description": "soundData Data about a sound to sync the animation to, as an alias or in the format {alias:\"MyAlias\", start:0}.\n\t\tstart is the seconds into the animation to start playing the sound. If it is omitted or soundData is a string, it defaults to 0.",
                            "type": "Object|String",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "doCancelledCallback",
                            "description": "Should an overridden animation's callback function still run?",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The Timeline object",
                "type": "AnimatorTimeline"
            },
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 214,
            "description": "Play an animation for a frame label event, starting at a random frame within the animation",
            "itemtype": "method",
            "name": "playAtRandomFrame",
            "params": [
                {
                    "name": "instance",
                    "description": "The timeline to animate.",
                    "type": "AnimatorTimeline"
                },
                {
                    "name": "event",
                    "description": "The frame label event (e.g. \"onClose\" to \"onClose_stop\").",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "The object of optional parameters or onComplete callback function",
                    "type": "Object|function",
                    "optional": true,
                    "props": [
                        {
                            "name": "onComplete",
                            "description": "The callback function when the animation is done",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "onCompleteParams",
                            "description": "Parameters to pass to onComplete function",
                            "type": "Array",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "speed",
                            "description": "The speed at which to play the animation.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "soundData",
                            "description": "soundData Data about a sound to sync the animation to, as an alias or in the format {alias:\"MyAlias\", start:0}.\n\t\tstart is the seconds into the animation to start playing the sound. If it is omitted or soundData is a string, it defaults to 0.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "doCancelledCallback",
                            "description": "Should an overridden animation's callback function still run?",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "The Timeline object",
                "type": "AnimatorTimeline"
            },
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 235,
            "description": "Creates the AnimatorTimeline for a given animation",
            "itemtype": "method",
            "name": "_makeTimeline",
            "params": [
                {
                    "name": "instance",
                    "description": "The timeline to animate",
                    "type": "easeljs.MovieClip"
                },
                {
                    "name": "event",
                    "description": "The frame label event (e.g. \"onClose\" to \"onClose stop\")",
                    "type": "String"
                },
                {
                    "name": "onComplete",
                    "description": "The function to callback when we're done",
                    "type": "Function"
                },
                {
                    "name": "onCompleteParams",
                    "description": "Parameters to pass to onComplete function",
                    "type": "Function"
                },
                {
                    "name": "speed",
                    "description": "The speed at which to play the animation.",
                    "type": "Number"
                },
                {
                    "name": "soundData",
                    "description": "Data about sound to sync the animation to.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The Timeline object",
                "type": "AnimatorTimeline"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 321,
            "description": "Determines if a given instance can be animated by Animator, to allow things that aren't\n\tMovieClips from EaselJS to be animated if they share the same API. Note - 'id' is a property with\n\ta unique value for each createjs.DisplayObject. If a custom object is made that does not inherit from DisplayObject,\n\tit needs to not have an id that is identical to anything from EaselJS.",
            "itemtype": "method",
            "name": "_canAnimate",
            "params": [
                {
                    "name": "instance",
                    "description": "The object to check for animation properties.",
                    "type": "easeljs.MovieClip"
                }
            ],
            "return": {
                "description": "If the instance can be animated or not.",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 352,
            "description": "Checks if animation exists",
            "itemtype": "method",
            "name": "_makeTimeline",
            "params": [
                {
                    "name": "instance",
                    "description": "The timeline to check",
                    "type": "easeljs.MovieClip"
                },
                {
                    "name": "event",
                    "description": "The frame label event (e.g. \"onClose\" to \"onClose stop\")",
                    "type": "String"
                }
            ],
            "access": "public",
            "tagname": "",
            "static": 1,
            "return": {
                "description": "does this animation exist?",
                "type": "Bool"
            },
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 385,
            "description": "Stop the animation.",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "instance",
                    "description": "The MovieClip to stop the action on",
                    "type": "createjs.MovieClip"
                },
                {
                    "name": "doOnComplete",
                    "description": "If we are suppose to do the complete callback when stopping (default is false)",
                    "type": "Bool"
                }
            ],
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 411,
            "description": "Stop all current Animator animations.\nThis is good for cleaning up all animation, as it doesn't do a callback on any of them.",
            "itemtype": "method",
            "name": "stopAll",
            "params": [
                {
                    "name": "container",
                    "description": "Optional - specify a container to stop timelines contained within",
                    "type": "createjs.Container"
                }
            ],
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 437,
            "description": "Remove a timeline from the stack",
            "itemtype": "method",
            "name": "_remove",
            "params": [
                {
                    "name": "timeline",
                    "description": "",
                    "type": "AnimatorTimeline"
                },
                {
                    "name": "doOnComplete",
                    "description": "If we do the on complete callback",
                    "type": "Bool"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 494,
            "description": "Pause all tweens which have been excuted by Animator.play()",
            "itemtype": "method",
            "name": "pause",
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 515,
            "description": "Resumes all tweens executed by the Animator.play()",
            "itemtype": "method",
            "name": "resume",
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 537,
            "description": "Pauses or unpauses all timelines that are children of the specified DisplayObjectContainer.",
            "itemtype": "method",
            "name": "pauseInGroup",
            "params": [
                {
                    "name": "paused",
                    "description": "If this should be paused or unpaused",
                    "type": "Bool"
                },
                {
                    "name": "container",
                    "description": "The container to stop timelines contained within",
                    "type": "createjs.Container"
                }
            ],
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 559,
            "description": "Get the timeline object for an instance",
            "itemtype": "method",
            "name": "getTimeline",
            "params": [
                {
                    "name": "instance",
                    "description": "MovieClip",
                    "type": "createjs.MovieClip"
                }
            ],
            "return": {
                "description": "The timeline",
                "type": "AnimatorTimeline"
            },
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 578,
            "description": "Whether the Animator class is currently paused.",
            "itemtype": "method",
            "name": "getPaused",
            "return": {
                "description": "if we're paused or not",
                "type": "Bool"
            },
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 589,
            "description": "Start the updating",
            "itemtype": "method",
            "name": "_startUpdate",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 602,
            "description": "Stop the updating",
            "itemtype": "method",
            "name": "_stopUpdate",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 615,
            "description": "The update every frame",
            "itemtype": "method",
            "name": "",
            "params": [
                {
                    "name": "elapsed",
                    "description": "The time in milliseconds since the last frame",
                    "type": "Int"
                }
            ],
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 707,
            "description": "The sound has been started",
            "itemtype": "method",
            "name": "onSoundStarted",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "timeline",
                    "description": "",
                    "type": "AnimatorTimeline"
                }
            ],
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 719,
            "description": "The sound is done",
            "itemtype": "method",
            "name": "onSoundDone",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "timeline",
                    "description": "",
                    "type": "AnimatorTimeline"
                }
            ],
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 732,
            "description": "Check to see if we have timeline",
            "itemtype": "method",
            "name": "_hasTimelines",
            "return": {
                "description": "if we have timelines",
                "type": "Bool"
            },
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/Animator.js",
            "line": 746,
            "description": "String representation of this class",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "String"
            },
            "static": 1,
            "class": "Animator",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 20,
            "description": "The event to callback when we're done",
            "itemtype": "event",
            "name": "onComplete",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 27,
            "description": "The parameters to pass when completed",
            "itemtype": "property",
            "name": "onCompleteParams",
            "type": "Array",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 34,
            "description": "The event label",
            "itemtype": "property",
            "name": "event",
            "type": "String",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 41,
            "description": "The instance of the timeline to animate",
            "itemtype": "property",
            "name": "instance",
            "type": "AnimatorTimeline",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 48,
            "description": "The frame number of the first frame",
            "itemtype": "property",
            "name": "firstFrame",
            "type": "Int",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 55,
            "description": "The frame number of the last frame",
            "itemtype": "property",
            "name": "lastFrame",
            "type": "Int",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 62,
            "description": "If the animation loops - determined by looking to see if it ends in \" stop\" or \" loop\"",
            "itemtype": "property",
            "name": "isLooping",
            "type": "Bool",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 69,
            "description": "Ensure we show the last frame before looping",
            "itemtype": "property",
            "name": "isLastFrame",
            "type": "Bool",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 76,
            "description": "length of timeline in frames",
            "itemtype": "property",
            "name": "length",
            "type": "Int",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 83,
            "description": "If this timeline plays captions",
            "itemtype": "property",
            "name": "useCaptions",
            "type": "Bool",
            "readonly": "",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 91,
            "description": "If the timeline is paused.",
            "itemtype": "property",
            "name": "_paused",
            "type": "Bool",
            "access": "private",
            "tagname": "",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 99,
            "description": "Sets and gets the animation's paused status.",
            "itemtype": "property",
            "name": "paused",
            "type": "Bool",
            "access": "public",
            "tagname": "",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 120,
            "description": "The animation start time in seconds on the movieclip's timeline.",
            "itemtype": "property",
            "name": "startTime",
            "type": "Number",
            "access": "public",
            "tagname": "",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 126,
            "description": "The animation duration in seconds.",
            "itemtype": "property",
            "name": "duration",
            "type": "Number",
            "access": "public",
            "tagname": "",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 132,
            "description": "The animation speed. Default is 1.",
            "itemtype": "property",
            "name": "speed",
            "type": "Number",
            "access": "public",
            "tagname": "",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 138,
            "description": "The position of the animation in seconds.",
            "itemtype": "property",
            "name": "time",
            "type": "Number",
            "access": "public",
            "tagname": "",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 144,
            "description": "Sound alias to sync to during the animation.",
            "itemtype": "property",
            "name": "soundAlias",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 150,
            "description": "A sound instance object from cloudkid.Sound or cloudkid.Audio, used for tracking sound position.",
            "itemtype": "property",
            "name": "soundInst",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 156,
            "description": "If the timeline will, but has yet to play a sound.",
            "itemtype": "property",
            "name": "playSound",
            "type": "Bool",
            "access": "public",
            "tagname": "",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 162,
            "description": "The time (seconds) into the animation that the sound starts.",
            "itemtype": "property",
            "name": "soundStart",
            "type": "Number",
            "access": "public",
            "tagname": "",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/AnimatorTimeline.js",
            "line": 168,
            "description": "The time (seconds) into the animation that the sound ends",
            "itemtype": "property",
            "name": "soundEnd",
            "type": "Number",
            "access": "public",
            "tagname": "",
            "class": "AnimatorTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 67,
            "description": "Indicates whether this BitmapMovieClip should loop when it reaches the end of its timeline.",
            "itemtype": "property",
            "name": "loop",
            "type": "Boolean",
            "default": "true",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 75,
            "description": "The current frame of the movieclip.",
            "itemtype": "property",
            "name": "currentFrame",
            "type": "Number",
            "default": "0",
            "readonly": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 84,
            "description": "If true, the BitmapMovieClip's position will not advance when ticked.",
            "itemtype": "property",
            "name": "paused",
            "type": "Boolean",
            "default": "false",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 92,
            "description": "If true, the BitmapMovieClip will advance its timeline during ticks. If false then it must be externally advanced.",
            "itemtype": "property",
            "name": "advanceDuringTicks",
            "type": "Boolean",
            "default": "true",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 100,
            "description": "By default BitmapMovieClip instances advance one frame per tick. Specifying a framerate for the BitmapMovieClip\nwill cause it to advance based on elapsed time between ticks as appropriate to maintain the target\nframerate.\n\nFor example, if a BitmapMovieClip with a framerate of 10 is placed on a Stage being updated at 40fps, then the BitmapMovieClip will\nadvance roughly one frame every 4 ticks. This will not be exact, because the time between each tick will\nvary slightly between frames.\n\nThis feature is dependent on the tick event object (or an object with an appropriate \"delta\" property) being\npassed into {{#crossLink \"Stage/update\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "framerate",
            "type": "{Number}",
            "default": "0",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 130,
            "description": "When the BitmapMovieClip is framerate independent, this is the time elapsed from frame 0 in seconds.",
            "itemtype": "property",
            "name": "elapsedTime",
            "type": "Number",
            "default": "0",
            "access": "public",
            "tagname": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 148,
            "description": "By default BitmapMovieClip instances advance one frame per tick. Specifying a framerate for the BitmapMovieClip\nwill cause it to advance based on elapsed time between ticks as appropriate to maintain the target\nframerate.",
            "itemtype": "property",
            "name": "_framerate",
            "type": "{Number}",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 160,
            "description": "When the BitmapMovieClip is framerate independent, this is the total time in seconds for the animation.",
            "itemtype": "property",
            "name": "_duration",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 169,
            "description": "When the BitmapMovieClip is framerate independent, this is the time elapsed from frame 0 in seconds.",
            "itemtype": "property",
            "name": "_t",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 178,
            "itemtype": "property",
            "name": "_prevPosition",
            "type": "Number",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 186,
            "description": "The Bitmap used to render the current frame of the animation.",
            "itemtype": "property",
            "name": "_bitmap",
            "type": "createjs.Bitmap",
            "access": "private",
            "tagname": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 194,
            "description": "An array of frame labels.",
            "itemtype": "property",
            "name": "_labels",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 202,
            "description": "An array of textures.",
            "itemtype": "property",
            "name": "_frames",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 210,
            "description": "The current texture.",
            "itemtype": "property",
            "name": "_currentTexture",
            "type": "cloudkid.TextureAtlas.Texture",
            "access": "private",
            "tagname": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 218,
            "description": "The origin point of the BitmapMovieClip.",
            "itemtype": "property",
            "name": "_origin",
            "type": "createjs.Point",
            "access": "private",
            "tagname": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 226,
            "description": "A scale to apply to the images in the BitmapMovieClip\nto restore normal size (if spritesheet was exported at a smaller or larger size).",
            "itemtype": "property",
            "name": "_scale",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 237,
            "description": "Returns true or false indicating whether the display object would be visible if drawn to a canvas.\nThis does not account for whether it would be visible within the boundaries of the stage.\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "Boolean indicating whether the display object would be visible if drawn to a canvas",
                "type": "Boolean"
            },
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 249,
            "description": "Draws the display object into the specified context ignoring its visible, alpha, shadow, and transform.\nReturns true if the draw was handled (useful for overriding functionality).\nNOTE: This method is mainly for internal use, though it may be useful for advanced uses.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "ctx",
                    "description": "The canvas 2D context object to draw into.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "ignoreCache",
                    "description": "Indicates whether the draw operation should ignore any current cache.\nFor example, used for drawing the cache (to prevent it from simply drawing an existing cache back\ninto itself).",
                    "type": "Boolean"
                }
            ],
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 267,
            "description": "Sets paused to false.",
            "itemtype": "method",
            "name": "play",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 275,
            "description": "Sets paused to true.",
            "itemtype": "method",
            "name": "stop",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 283,
            "description": "Advances this movie clip to the specified position or label and sets paused to false.",
            "itemtype": "method",
            "name": "gotoAndPlay",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The animation name or frame number to go to.",
                    "type": "String|Number"
                }
            ],
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 293,
            "description": "Advances this movie clip to the specified position or label and sets paused to true.",
            "itemtype": "method",
            "name": "gotoAndStop",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The animation or frame name to go to.",
                    "type": "String|Number"
                }
            ],
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 303,
            "description": "Advances the playhead. This occurs automatically each tick by default.",
            "params": [
                {
                    "name": "time",
                    "description": "The amount of time in ms to advance by. Only applicable if framerate is set.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "itemtype": "method",
            "name": "advance",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 327,
            "description": "Returns a sorted list of the labels defined on this BitmapMovieClip. Shortcut to TweenJS: Timeline.getLabels();",
            "itemtype": "method",
            "name": "getLabels",
            "return": {
                "description": "A sorted array of objects with label and position (aka frame) properties.",
                "type": "Array[Object]"
            },
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 336,
            "description": "Returns the name of the label on or immediately before the current frame. See TweenJS: Timeline.getCurrentLabel()\nfor more information.",
            "itemtype": "method",
            "name": "getCurrentLabel",
            "return": {
                "description": "The name of the current label or null if there is no label.",
                "type": "String"
            },
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 355,
            "description": "Returns the name of the label on or immediately before the current frame. See TweenJS: Timeline.getCurrentLabel()\nfor more information.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "atlas",
                    "description": "The texture atlas to pull frames from.",
                    "type": "TextureAtlas"
                },
                {
                    "name": "data",
                    "description": "Initialization data",
                    "type": "Object",
                    "props": [
                        {
                            "name": "fps",
                            "description": "Framerate to play the movieclip at. Omitting this will use the current framerate.",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "labels",
                            "description": "A dictionary of the labels in the movieclip to assist in playing animations.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "origin",
                            "description": "The origin of the movieclip.",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "{x:0,y:0}"
                        },
                        {
                            "name": "frames",
                            "description": "An array of frame sequences to pull from the texture atlas.",
                            "type": "Array",
                            "optional": true,
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The name to use for the frame sequence. This should include a \"#\" to be replaced with the image number.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "min",
                                    "description": "The first frame number in the frame sequence.",
                                    "type": "Int",
                                    "optional": true
                                },
                                {
                                    "name": "max",
                                    "description": "The last frame number in the frame sequence.",
                                    "type": "Int",
                                    "optional": true
                                },
                                {
                                    "name": "digits",
                                    "description": "The maximum number of digits in the names of the frames, e.g. myAnim0001 has 4 digits.",
                                    "type": "Int",
                                    "optional": true,
                                    "optdefault": "4"
                                }
                            ]
                        },
                        {
                            "name": "scale",
                            "description": "The scale at which the art was exported, e.g. a scale of 1.4 means the art was increased\n         in size to 140% before exporting and should be scaled back down before drawing to the screen.\n\n Format for data:\n\t{\n\t\tfps:30,\n\t\tlabels:\n\t\t{\n\t\t\tanimStart:0,\n\t\t\tanimStart_loop:15\n\t\t},\n\t\torigin:{ x: 20, y:30 },\n\t\tframes:\n\t\t[\n\t\t\t{\n\t\t\t\tname:\"myAnim#\",\n\t\t\t\tmin:1,\n\t\t\t\tmax:20,\n\t\t\t\tdigits:4\n\t\t\t}\n\t\t]\n\t}\n\nThe object describes a 30 fps animation that is 20 frames long, and was originally myAnim0001.png->myAnim0020.png,\nwith frame labels on the first and 16th frame. 'digits' is optional, and defaults to 4.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "1"
                        }
                    ]
                }
            ],
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 435,
            "description": "Copies the labels, textures, origin, and framerate from another BitmapMovieClip.\nThe labels and textures are copied by reference, instead of a deep copy.",
            "itemtype": "method",
            "name": "copyFrom",
            "params": [
                {
                    "name": "other",
                    "description": "The movieclip to copy data from.",
                    "type": "BitmapMovieClip"
                }
            ],
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 452,
            "description": "Destroys the BitmapMovieClip, removing all children and nulling all reference variables.",
            "itemtype": "method",
            "name": "destroy",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 466,
            "itemtype": "method",
            "name": "_tick",
            "params": [
                {
                    "name": "props",
                    "description": "Properties to copy to the DisplayObject {{#crossLink \"DisplayObject/tick\"}}{{/crossLink}} event object.\nfunction.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 477,
            "itemtype": "method",
            "name": "_goto",
            "params": [
                {
                    "name": "positionOrLabel",
                    "description": "The animation name or frame number to go to.",
                    "type": "String|Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 507,
            "itemtype": "method",
            "name": "_updateTimeline",
            "access": "protected",
            "tagname": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/BitmapMovieClip.js",
            "line": 527,
            "itemtype": "method",
            "name": "_reset",
            "access": "private",
            "tagname": "",
            "class": "BitmapMovieClip",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterClip.js",
            "line": 23,
            "description": "The event to play",
            "itemtype": "property",
            "name": "event",
            "type": "String",
            "class": "CharacterClip",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterClip.js",
            "line": 30,
            "description": "The number of times to loop",
            "itemtype": "property",
            "name": "loops",
            "type": "Int",
            "class": "CharacterClip",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterClip.js",
            "line": 37,
            "description": "Initialiaze this character clip",
            "itemtype": "method",
            "name": "initialize",
            "params": [
                {
                    "name": "event",
                    "description": "The frame label to play using Animator.play",
                    "type": "String"
                },
                {
                    "name": "loops",
                    "description": "The number of times to loop, default of 0 plays continuously",
                    "type": "Int"
                }
            ],
            "class": "CharacterClip",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 25,
            "description": "The current stack of animations to play",
            "itemtype": "property",
            "name": "_animationStack",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 33,
            "description": "The currently playing animation",
            "itemtype": "property",
            "name": "_currentAnimation",
            "type": "CharacterClip",
            "access": "private",
            "tagname": "",
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 41,
            "description": "Current number of loops for the current animation",
            "itemtype": "property",
            "name": "_loops",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 49,
            "description": "If the current animation choreographies can't be interrupted",
            "itemtype": "property",
            "name": "_interruptable",
            "type": "Bool",
            "access": "private",
            "tagname": "",
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 57,
            "description": "If frame dropping is allowed for this animation set",
            "itemtype": "property",
            "name": "_allowFrameDropping",
            "type": "Bool",
            "access": "private",
            "tagname": "",
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 65,
            "description": "The current character",
            "itemtype": "property",
            "name": "_character",
            "type": "createjs.MovieClip",
            "access": "private",
            "tagname": "",
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 73,
            "description": "Callback function for playing animation",
            "itemtype": "property",
            "name": "_callback",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 81,
            "description": "If this instance has been destroyed",
            "itemtype": "property",
            "name": "_destroyed",
            "type": "Bool",
            "access": "private",
            "tagname": "",
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 89,
            "description": "Initiliazes this Character controller",
            "itemtype": "method",
            "name": "initialize",
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 99,
            "description": "Set the current character, setting to null clears character",
            "itemtype": "method",
            "name": "setCharacter",
            "params": [
                {
                    "name": "character",
                    "description": "MovieClip",
                    "type": "createjs.MovieClip"
                }
            ],
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 116,
            "description": "If we want to play a static frame",
            "itemtype": "method",
            "name": "gotoFrameAndStop",
            "params": [
                {
                    "name": "event",
                    "description": "The frame label to stop on",
                    "type": "String"
                }
            ],
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 130,
            "description": "Will play a sequence of animations",
            "itemtype": "method",
            "name": "playClips",
            "params": [
                {
                    "name": "clips",
                    "description": "an array of CharacterClip objects",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "Callback for when the animations are either done, or\n            have been interrupted. Will pass true is interrupted,\n            false if they completed",
                    "type": "Function"
                },
                {
                    "name": "interruptable",
                    "description": "If calling this can interrupt the current animation(s)",
                    "type": "Bool"
                },
                {
                    "name": "cancelPreviousCallback",
                    "description": "Cancel the callback the last time this was called",
                    "type": "Bool"
                },
                {
                    "name": "allowFrameDropping",
                    "description": "If frame dropping is allowed for this frame, if the Animator is doing frame drop checks",
                    "type": "Bool"
                }
            ],
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 173,
            "description": "Start the next animation in the sequence",
            "itemtype": "method",
            "name": "startNext",
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 201,
            "description": "When the animation has completed playing",
            "itemtype": "method",
            "name": "_animationComplete",
            "access": "private",
            "tagname": "",
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 227,
            "description": "Clear any animations for the current character",
            "itemtype": "method",
            "name": "clear",
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/CharacterController.js",
            "line": 245,
            "description": "Don't use after this",
            "itemtype": "method",
            "name": "destroy",
            "class": "CharacterController",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 20,
            "description": "A reference to this instance of PixiAnimator. This is internal to PixiAnimator and can't be accessed externally.",
            "itemtype": "property",
            "name": "_instance",
            "type": "PixiAnimator",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 28,
            "description": "The collection of AnimTimelines that are playing",
            "itemtype": "property",
            "name": "_timelines",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 35,
            "description": "The number of animations",
            "itemtype": "property",
            "name": "_numAnims",
            "type": "Int",
            "access": "private",
            "tagname": "",
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 42,
            "description": "A string reference to PixiAnimator's update callback\nso it can be removed in the event that there are no\nanimations to play",
            "itemtype": "property",
            "name": "_updateAlias",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 51,
            "description": "The function that PixiAnimator uses for update calls. Do not modify.",
            "itemtype": "property",
            "name": "_boundUpdate",
            "type": "Function",
            "access": "private",
            "tagname": "",
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 58,
            "description": "The instance of cloudkid.Audio or cloudkid.Sound for playing audio along with animations.",
            "itemtype": "property",
            "name": "soundLib",
            "type": "cloudkid.Audio|cloudkid.Sound",
            "access": "public",
            "tagname": "",
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 66,
            "description": "Stored collection of AnimTimelines. This is internal to PixiAnimator and can't be accessed externally.",
            "itemtype": "property",
            "name": "_animPool",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 74,
            "description": "The global captions object to use with animator",
            "itemtype": "property",
            "name": "captions",
            "type": "cloudkid.Captions",
            "access": "public",
            "tagname": "",
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 81,
            "description": "Initializes the singleton instance of PixiAnimator.",
            "itemtype": "method",
            "name": "init",
            "static": 1,
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 92,
            "description": "Getter for the reference to this instance of PixiAnimator",
            "itemtype": "property",
            "name": "instance",
            "type": "PixiAnimator",
            "readonly": "",
            "static": 1,
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 103,
            "description": "Play a specified animation",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "clip",
                    "description": "The clip to play",
                    "type": "PIXI.MovieClip|PIXI.Spine"
                },
                {
                    "name": "anim",
                    "description": "Depending on the type of clip, this could be one of several things.\n\nIf animating a MovieClip, this should be the array of Textures that is the animation (or null to use the existing array on the clip).\n\nIf animating a Spine object:\n- If anim is a string it will play that single animation by name.\n- If anim is an array of strings it will play as a list of animations (only the last one can loop).\n- If anim is an array of objects (with anim, loop, and speed properties) then multiple animations will be played simultaneously.\n   When multiple animations play, animation stops when any non looping animation ends.",
                    "type": "String|Array"
                },
                {
                    "name": "options",
                    "description": "The object of optional parameters or onComplete callback function",
                    "type": "Object|function",
                    "optional": true,
                    "props": [
                        {
                            "name": "callback",
                            "description": "The function to call once the animation has finished",
                            "type": "Function",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "loop",
                            "description": "Whether the animation should loop",
                            "type": "Bool",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "speed",
                            "description": "The speed at which to play the animation",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "1"
                        },
                        {
                            "name": "startTime",
                            "description": "The time in milliseconds into the animation to start.",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "0"
                        },
                        {
                            "name": "soundData",
                            "description": "Data about a sound to sync the animation to, as an alias or in the format {alias:\"MyAlias\", start:0}.\n       start is the seconds into the animation to start playing the sound. If it is omitted or soundData is a string, it defaults to 0.",
                            "type": "Object|String",
                            "optional": true,
                            "optdefault": "null"
                        }
                    ]
                }
            ],
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 247,
            "description": "Checks to see if a Spine animation includes a given animation alias",
            "itemtype": "method",
            "name": "instanceHasAnimation",
            "params": [
                {
                    "name": "instance",
                    "description": "The animation to search. This has to be a Spine animation.",
                    "type": "PIXI.spine"
                },
                {
                    "name": "anim",
                    "description": "The animation alias to search for",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if the animation is found",
                "type": "Boolean"
            },
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 262,
            "description": "Checks to see if a Spine animation includes a given animation alias",
            "itemtype": "method",
            "name": "checkSpineForAnimation",
            "params": [
                {
                    "name": "clip",
                    "description": "The spine to search",
                    "type": "PIXI.spine"
                },
                {
                    "name": "anim",
                    "description": "The animation alias to search for",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if the animation is found",
                "type": "Boolean"
            },
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 275,
            "description": "Stop a clip",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "clip",
                    "description": "The clip to stop",
                    "type": "PIXI.MovieClip|PIXI.Spine"
                },
                {
                    "name": "doCallback",
                    "description": "Whether the animations callback should be run",
                    "type": "Bool"
                }
            ],
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 302,
            "description": "Stops all current animations",
            "itemtype": "method",
            "name": "stop",
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 321,
            "description": "Put an AnimTimeline back into the general pool after it's done playing\nor has been manually stopped",
            "itemtype": "method",
            "name": "_repool",
            "params": [
                {
                    "name": "timeline",
                    "description": "",
                    "type": "PixiAnimator.AnimTimeline"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 340,
            "description": "Update each frame",
            "itemtype": "method",
            "name": "_update",
            "params": [
                {
                    "name": "elapsed",
                    "description": "The time since the last frame",
                    "type": "Int"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 453,
            "description": "Called when a movie clip is done playing, calls the AnimTimeline's\ncallback if it has one",
            "itemtype": "method",
            "name": "_onMovieClipDone",
            "params": [
                {
                    "name": "timeline",
                    "description": "",
                    "type": "PixiAnimator.AnimTimeline"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 482,
            "description": "Destroy this",
            "itemtype": "method",
            "name": "destroy",
            "class": "PixiAnimator",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 517,
            "description": "Initialize the AnimTimeline",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "clip",
                    "description": "The AnimTimeline's clip",
                    "type": "PIXI.MovieClip|Pixi.Spine"
                },
                {
                    "name": "callback",
                    "description": "The function to call when the clip is finished playing",
                    "type": "Function"
                },
                {
                    "name": "speed",
                    "description": "The speed at which the clip should be played",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "PixiAnimator.AnimTimeline"
            },
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 528,
            "description": "The clip for this AnimTimeLine",
            "itemtype": "property",
            "name": "clip",
            "type": "PIXI.MovieClip|PIXI.Spine",
            "access": "public",
            "tagname": "",
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 535,
            "description": "Whether the clip is a PIXI.Spine",
            "itemtype": "property",
            "name": "isSpine",
            "type": "Bool",
            "access": "public",
            "tagname": "",
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 542,
            "description": "The function to call when the clip is finished playing",
            "itemtype": "property",
            "name": "callback",
            "type": "Function",
            "access": "public",
            "tagname": "",
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 549,
            "description": "The speed at which the clip should be played",
            "itemtype": "property",
            "name": "speed",
            "type": "Number",
            "access": "public",
            "tagname": "",
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 556,
            "itemtype": "property",
            "name": "spineStates",
            "type": "Array",
            "access": "public",
            "tagname": "",
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 562,
            "description": "Not used by PixiAnimator, but potentially useful for other code to keep track of what type of animation is being played",
            "itemtype": "property",
            "name": "loop",
            "type": "Bool",
            "access": "public",
            "tagname": "",
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 569,
            "description": "The position of the animation in seconds",
            "itemtype": "property",
            "name": "time",
            "type": "Number",
            "access": "public",
            "tagname": "",
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 576,
            "description": "Sound alias to sync to during the animation.",
            "itemtype": "property",
            "name": "soundAlias",
            "type": "String",
            "access": "public",
            "tagname": "",
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 583,
            "description": "A sound instance object from cloudkid.Sound or cloudkid.Audio, used for tracking sound position.",
            "itemtype": "property",
            "name": "soundInst",
            "type": "Object",
            "access": "public",
            "tagname": "",
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 590,
            "description": "If the timeline will, but has yet to, play a sound",
            "itemtype": "property",
            "name": "playSound",
            "type": "Bool",
            "access": "public",
            "tagname": "",
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 597,
            "description": "The time (seconds) into the animation that the sound starts.",
            "itemtype": "property",
            "name": "soundStart",
            "type": "Number",
            "access": "public",
            "tagname": "",
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 604,
            "description": "The time (seconds) into the animation that the sound ends",
            "itemtype": "property",
            "name": "soundEnd",
            "type": "Number",
            "access": "public",
            "tagname": "",
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 611,
            "description": "If this timeline plays captions",
            "itemtype": "property",
            "name": "useCaptions",
            "type": "Bool",
            "readonly": "",
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 619,
            "description": "If this animation is paused.",
            "itemtype": "property",
            "name": "_paused",
            "type": "Bool",
            "access": "private",
            "tagname": "",
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/PixiAnimator.js",
            "line": 629,
            "description": "Sets and gets the animation's paused status.",
            "itemtype": "property",
            "name": "paused",
            "type": "Bool",
            "access": "public",
            "tagname": "",
            "class": "PixiAnimator.AnimTimeline",
            "module": "cloudkid"
        },
        {
            "file": "src/TextureAtlas.js",
            "line": 15,
            "description": "The an array of image elements (Image|HTMLCanvasElement) that frames in texture atlas use.",
            "itemtype": "property",
            "name": "_image",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "class": "TextureAtlas",
            "module": "cloudkid"
        },
        {
            "file": "src/TextureAtlas.js",
            "line": 30,
            "description": "The dictionary of Textures that this atlas consists of.",
            "itemtype": "property",
            "name": "frames",
            "type": "Object",
            "class": "TextureAtlas",
            "module": "cloudkid"
        },
        {
            "file": "src/TextureAtlas.js",
            "line": 58,
            "description": "Handler when the skip button is pressed",
            "itemtype": "method",
            "name": "getFrame",
            "params": [
                {
                    "name": "name",
                    "description": "The frame name to get.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The texture by that name, or null if it doesn't exist.",
                "type": "cloudkid.TextureAtlas.Texture"
            },
            "class": "TextureAtlas",
            "module": "cloudkid"
        },
        {
            "file": "src/TextureAtlas.js",
            "line": 69,
            "description": "Get an array of Textures that match a specific name.",
            "itemtype": "method",
            "name": "getFrames",
            "params": [
                {
                    "name": "name",
                    "description": "The base name of all frames to look for, like \"anim_#\" to search for an animation exported\n       as anim_0001.png (the \".png\" is dropped when the TextureAtlas is loaded).",
                    "type": "String"
                },
                {
                    "name": "numberMin",
                    "description": "The number to start on while looking for frames. Flash generally starts at 1.",
                    "type": "Int"
                },
                {
                    "name": "numberMax",
                    "description": "The number to go until while looking for frames. \n       If your animation runs from frame 0001 to frame 0014, numberMax would be 14.",
                    "type": "Int"
                },
                {
                    "name": "maxDigits",
                    "description": "Maximum number of digits, like 4 for an animation exported as anim_0001.png",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "4"
                },
                {
                    "name": "outArray",
                    "description": "If already using an array, this can fill it instead of creating a new one.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "An collection of cloudkid.TextureAtlas.Textures.",
                "type": "Array"
            },
            "class": "TextureAtlas",
            "module": "cloudkid"
        },
        {
            "file": "src/TextureAtlas.js",
            "line": 151,
            "description": "The image element that this texture references.",
            "itemtype": "property",
            "name": "image",
            "type": "Image|HTMLCanvasElement",
            "class": "Texture",
            "module": "cloudkid"
        },
        {
            "file": "src/TextureAtlas.js",
            "line": 157,
            "description": "The frame rectangle within the image.",
            "itemtype": "property",
            "name": "frame",
            "type": "createjs.Rectangle",
            "class": "Texture",
            "module": "cloudkid"
        },
        {
            "file": "src/TextureAtlas.js",
            "line": 162,
            "description": "If this texture has been trimmed.",
            "itemtype": "property",
            "name": "trimmed",
            "type": "Boolean",
            "class": "Texture",
            "module": "cloudkid"
        },
        {
            "file": "src/TextureAtlas.js",
            "line": 167,
            "description": "The offset that the trimmed sprite should be placed at to restore it to the untrimmed position.",
            "itemtype": "property",
            "name": "offset",
            "type": "createjs.Point",
            "class": "Texture",
            "module": "cloudkid"
        },
        {
            "file": "src/TextureAtlas.js",
            "line": 172,
            "description": "The width of the untrimmed texture.",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "class": "Texture",
            "module": "cloudkid"
        },
        {
            "file": "src/TextureAtlas.js",
            "line": 177,
            "description": "The height of the untrimmed texture.",
            "itemtype": "property",
            "name": "height",
            "type": "Number",
            "class": "Texture",
            "module": "cloudkid"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:99"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:114"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:129"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:214"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:235"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:321"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:352"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:385"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:411"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:437"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:494"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:515"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:537"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:559"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:578"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:589"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:602"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:615"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:732"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/Animator.js:746"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/CharacterClip.js:37"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/CharacterController.js:89"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/CharacterController.js:99"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/CharacterController.js:116"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/CharacterController.js:130"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/CharacterController.js:173"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/CharacterController.js:201"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/CharacterController.js:227"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/CharacterController.js:245"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/PixiAnimator.js:103"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/PixiAnimator.js:247"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/PixiAnimator.js:247"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/PixiAnimator.js:262"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/PixiAnimator.js:262"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/PixiAnimator.js:275"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/PixiAnimator.js:302"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/PixiAnimator.js:321"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/PixiAnimator.js:340"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/PixiAnimator.js:453"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/PixiAnimator.js:482"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src/PixiAnimator.js:517"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/PixiAnimator.js:517"
        }
    ]
}